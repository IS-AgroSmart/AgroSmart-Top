version: '3'
services:
    traefik:
        image: "traefik:v2.4"
        container_name: "container-traefik"
        command:
            #- "--log.level=DEBUG"
            - "--api.dashboard=true"
            - "--accesslog=true"
            - "--metrics.prometheus=true"
            - "--metrics.prometheus.manualrouting=true"
            - "--providers.docker=true"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.entrypoints=web"
            - "traefik.http.routers.traefik.rule=PathPrefix(`/traefik`) || HeadersRegexp(`Referer`, `/traefik/dashboard/`)"
            - "traefik.http.routers.traefik.priority=100"
            - "traefik.http.routers.traefik.middlewares=traefik"
            - "traefik.http.routers.prometheus.rule=PathPrefix(`/metrics`)"
            - "traefik.http.routers.prometheus.service=prometheus@internal"
            - "traefik.http.middlewares.traefik.chain.middlewares=traefik-strip-prefix"
            # - "traefik.http.middlewares.traefik-digest-auth.digestauth.usersfile=/run/secrets/auth_digest"
            - "traefik.http.middlewares.traefik-strip-prefix.stripprefix.prefixes=/traefik"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.services.traefik.loadbalancer.server.port=8080"
        ports:
            - "80:80"
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock:ro"
    geoserver:
        image: mxabierto/boundless-suite:efeabbd1a9afe9080acb5176c66ac4ec06408bb0
        container_name: container-geoserver
        volumes: 
            - ${PREFIX}/flights:/media/input
            - ${PREFIX}/projects:/media/USB
            - geoserver_data:/opt/geoserver/data_dir
        environment:
            - GEOSERVER_DATA_DIR=/opt/geoserver/data_dir
            - JAVA_OPTS=-Xms320m -Xmx750m -XX:SoftRefLRUPolicyMSPerMB=36000 -XX:-UsePerfData -Dorg.geotools.referencing.forceXY=true -Dorg.geotoools.render.lite.scale.unitCompensation=true -Xbootclasspath/a:/usr/local/tomcat/lib/marlin-0.7.3-Unsafe.jar -Dsun.java2d.renderer=org.marlin.pisces.PiscesRenderingEngine -Dsun.java2d.renderer.useThreadLocal=false -Djava.library.path=/usr/lib:/usr/lib/jni:/opt/libjpeg-turbo/lib64:/usr/lib64 -Xbootclasspath/a:/opt/tomcat/lib/marlin-0.7.3-Unsafe.jar -Dsun.java2d.renderer=org.marlin.pisces.PiscesRenderingEngine -Dsun.java2d.renderer.useThreadLocal=false -server -Duser.timezone=GMT -Dorg.geotools.shapefile.datetime=true
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.geoserver.rule=PathPrefix(`/geoserver`)"
            - "traefik.http.routers.geoserver.entrypoints=web"
            - "traefik.http.middlewares.geoserver-remove-prefix.stripprefix.prefixes=/geoserver"
            - "traefik.http.routers.geoserver.middlewares=geoserver-remove-prefix@docker"
    nodeodm:
        image: opendronemap/nodeodm
        container_name: container-nodeodm
        volumes:
            - ${PREFIX}/flights:/var/www/data
        command: --log_level=silly --cleanup_tasks_after=525960000000 --parallel_queue_processing=10
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.nodeodm.rule=PathPrefix(`/nodeodm`)"
            - "traefik.http.routers.nodeodm.entrypoints=web"
            - "traefik.http.middlewares.nodeodm-remove-prefix.stripprefix.prefixes=/nodeodm"
            - "traefik.http.routers.nodeodm.middlewares=nodeodm-remove-prefix@docker"
    vue:
        build: 
            context: ${PREFIX}/app/frontend
            dockerfile: Dockerfile
        container_name: container-vue
        volumes:
            - ${PREFIX}/app/frontend:/app
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.vue.rule=PathPrefix(`/`)"
            - "traefik.http.routers.vue.entrypoints=web"
            - "traefik.http.services.vue-app.loadbalancer.server.port=8001"
    django:
        build:
            context: ${PREFIX}/app
            dockerfile: Dockerfile
        container_name: container-django
        volumes:
            - ${PREFIX}/app:/app
            - ${PREFIX}/flights:/flights
            - ${PREFIX}/projects:/projects
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.django.rule=PathPrefix(`/api`) || PathPrefix(`/admin`) || PathPrefix(`/mapper`) || PathPrefix(`/lib`) || PathPrefix(`/src`)"
            - "traefik.http.routers.django.priority=99"
            - "traefik.http.routers.django.entrypoints=web"
    prometheus:
        image: prom/prometheus:v2.1.0
        container_name: container-prometheus
        volumes:
          - ./prometheus/:/etc/prometheus/
          - prometheus_data:/prometheus
        command:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
          - '--web.console.libraries=/usr/share/prometheus/console_libraries'
          - '--web.console.templates=/usr/share/prometheus/consoles'
          - '--web.route-prefix=/'
          - '--web.external-url=http://flysensorec.com/prometheus'
        ports:
          - "9090:9090"
        links:
          - cadvisor:cadvisor
        depends_on:
          - cadvisor
        restart: always
    node-exporter:
        image: prom/node-exporter
        container_name: container-node-exporter
        volumes:
          - /proc:/host/proc:ro
          - /sys:/host/sys:ro
          - /:/rootfs:ro
        command: 
          - '--path.procfs=/host/proc' 
          - '--path.sysfs=/host/sys'
          - --collector.filesystem.ignored-mount-points
          - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
        expose:
          - 9100
        restart: always
    cadvisor:
        container_name: container-cadvisor
        image: google/cadvisor
        volumes:
          - /:/rootfs:ro
          - /var/run:/var/run:rw
          - /sys:/sys:ro
          - /var/lib/docker/:/var/lib/docker:ro
        expose:
          - 8080
        restart: always
    grafana:
        image: grafana/grafana
        container_name: container-grafana
        user: "472"
        depends_on:
          - prometheus
        expose:
          - 3000
        volumes:
          - grafana_data:/var/lib/grafana
          - ./grafana/provisioning/:/etc/grafana/provisioning/
        env_file:
          - ./grafana/config.monitoring
        restart: always
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.grafana.rule=PathPrefix(`/grafana`)"
            - "traefik.http.routers.grafana.entrypoints=web"
            - "traefik.http.middlewares.grafana-remove-prefix.stripprefix.prefixes=/grafana"
            - "traefik.http.routers.grafana.middlewares=grafana-remove-prefix@docker"
volumes:
    geoserver_data:
    prometheus_data:
    grafana_data:
